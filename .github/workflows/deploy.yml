name: build-and-deploy

on:
  push:
    branches: [ main, master, dev ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image (ARM64)
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/cuisinotheque
          docker buildx build \
            --platform linux/arm64 \
            -t $IMAGE:latest \
            -t $IMAGE:${{ github.sha }} \
            --push .

  deploy:
    needs: build
    runs-on: [self-hosted, rpi4]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Apply manifests
        env:
          KUBECONFIG: /etc/rancher/k3s/k3s.yaml
          IMAGE: ghcr.io/${{ github.repository_owner }}/cuisinotheque:latest
        run: |
          # Namespace
          kubectl apply -f k8s/namespace.yaml
          
          # Config & secrets
          kubectl apply -f k8s/config.yaml
          kubectl apply -f k8s/postgres-secret.yaml
          
          # PostgreSQL
          kubectl apply -f k8s/postgres-pvc.yaml
          kubectl apply -f k8s/postgres-deployment.yaml
          kubectl apply -f k8s/postgres-service.yaml
          
          # Django
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/ingress.yaml
          
          # Met à jour l’image
          kubectl -n cuisinotheque set image deployment/cuisinotheque-web web=$IMAGE || true
          
          # Redémarre le déploiement
          kubectl -n cuisinotheque rollout restart deployment/cuisinotheque-web
          
          # Attente souple (ne bloque pas le job si jamais ça échoue)
          kubectl -n cuisinotheque rollout status deployment/cuisinotheque-web --timeout=60s || kubectl -n cuisinotheque get pods
