name: build-and-deploy

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/cuisinotheque

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (amd64 + arm64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Write kubeconfig from secret
        run: |
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > kubeconfig
          chmod 600 kubeconfig

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.33.0

      # 1) Applique les manifests (création/MAJ de base)
      - name: Apply manifests
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
        run: |
          kubectl apply -f k8s/

      # 2) Met à jour l'image du déploiement vers le SHA construit
      - name: Set image to new SHA
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
          IMAGE: ${{ env.IMAGE_NAME }}:${{ github.sha }}
        run: |
          kubectl -n cuisinotheque set image deployment/cuisinotheque-web web=$IMAGE
          kubectl -n cuisinotheque rollout status deployment/cuisinotheque-web --timeout=120s
